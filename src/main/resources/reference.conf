
  httpPort = 8080
  httpPort = ${?HTTP_PORT}
  clusterPort = 2553
  clusterPort = ${?CLUSTER_PORT}

  persistent-entity-timeout = "60s"
  persistent-entity-timeout = ${?PERSISTENT_ENTITY_TIMEOUT} 
  
  akka {
    loglevel = INFO
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    
    extensions = ["com.navneetgupta.cqrs.shared.eventsource.CassandraProjectionStorage"]
    
    persistence{
      journal.plugin = "cassandra-journal"            
      snapshot-store.plugin = "cassandra-snapshot-store"
    }
    
    actor {
      provider = "cluster"
      
      debug {
        receive = on // log all messages sent to an actor if that actors receive method is a LoggingReceive
        autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
        lifecycle = on // log all actor lifecycle events of all actors
        fsm = on // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
        event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
      }
      
      serializers {
        json = "com.navneetgupta.cqrs.shared.json.JsonSerializer"
        proto = "akka.remote.serialization.ProtobufSerializer"
      }
      
      serialization-bindings {
      	"scalapb.GeneratedMessage" = proto
        "com.google.protobuf.Message" = proto
        "com.navneetgupta.cqrs.shared.fo.BaseFieldsObject" = json
      }
    }
    remote {       
      netty.tcp {
        hostname = "127.0.0.1"
        hostname = ${NODE_HOSTNAME}
        port = ${clusterPort}
        bind-port = ${clusterPort}        
      }
    }
    cluster {      
      seed-nodes = [
        "akka.tcp://CQRSApp@192.168.0.101:2553",
        "akka.tcp://CQRSApp@192.168.0.101:2554"
      ]
    }
  }

  
  elasticsearch {
    host = "127.0.0.1"
    port = 9200
  }
  
  cassandra {
    host = "127.0.0.1"
    port = 9042
    number-of-retries = 500

  }
  cassandra-journal {

    contact-points = ["127.0.0.1"]
    port = 9042

    event-adapters{
      proto = "com.navneetgupta.cqrs.shared.adapter.BaseDatamodelAdapter"
    }
      
    event-adapter-bindings {
      "com.navneetgupta.cqrs.shared.event.BaseEvent" = proto
      "scalapb.GeneratedMessage" = proto
    }
    offset-mode = "sequence"
  } 
  
  cassandra-snapshot-store {
    contact-points = ["127.0.0.1"]
    port = 9042
  }

  maxShards = 60
  
  cassandra-query-journal {
    refresh-interval = 500ms
    max-buffer-size = 100
    max-result-size-query = 100
  }

user-management{
  ip = "127.0.0.1"
  ip = ${?USER_MANAGEMENT_BIND_IP}
  port = 9000
  port = ${?USER_MANAGEMENT_BIND_PORT}
}

cassandra-journal{  
  
  tags = {
    bookstoreuser = 1
    usercreated = 2
    personalinfoupdated = 2
  }
} 
